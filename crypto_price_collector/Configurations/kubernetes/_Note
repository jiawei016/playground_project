# Step 1 Build Image to Docker Hub
<command>docker login</command>
<command>
    docker build -f Dockerfile -t k8s-crypto-price-producer .
    docker tag k8s-crypto-price-producer jiawei016/crypto-price-collector-producer
    docker push jiawei016/crypto-price-collector-producer
</command>
<command>
    docker build -f Dockerfile -t mykafkacluster-crypto_consumer .
    docker tag mykafkacluster-crypto_consumer jiawei016/crypto-price-collector-consumer
    docker push jiawei016/crypto-price-collector-consumer
</command>

# Commands
## Delete All
kubectl delete all --all --all-namespaces

# Step 2 Build Kubernetes
## To Get All Kubernetes Deployment
kubectl get deployments --all-namespaces
## To Delete Kubernetes Deployment
kubectl delete deployment <deployment-name>
kubectl delete deployment --all
kubectl delete service --all

## To Build and Up all Kubernetes Config Files
dir kubernetes
kubectl apply -f kubernetes

## To Build and Up one by one Kubernetes Config Files
kubectl create namespace kafka

kubectl apply -f zookeeper-deployment.yaml
kubectl apply -f kafka-deployment.yaml
kubectl apply -f postgres-deployment.yaml
kubectl apply -f redis-deployment.yaml
kubectl apply -f crypto-producer-service-deployment.yaml

## To Build and Up one by one Kubernetes Config Files

kubectl delete deployment crypto-producer
kubectl apply -f crypto-producer-deployment.yaml
kubectl apply -f crypto-consumer-deployment.yaml

# Step 3 Setup Kubernetes PVC (Persistent Volume Claims) for DB
## To Get All Kubernetes Persistent Volume
kubectl get storageclass
## To Get All Kubernetes Persistent Volume that created
kubectl get pv
## To Get All Kubernetes claims
kubectl get pvc
## To View Details of Kubernetes Persistent Volume
kubectl describe storageclass

# Step 4 Setup Kubernetes Secrets for DB Password
kubectl create secret generic my-pgpassword-secret --from-literal PGPASSWORD=P@ssword_123
## To Get All Kubernetes Secrets
kubectl get secrets

# Step 5 Setup ingress nginx environment
https://kubernetes.github.io/ingress-nginx/deploy/#quick-start

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml
minikube addons enable ingress
