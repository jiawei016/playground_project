version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always
    networks:
      - my_network

  kafka-service:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 5000
      KAFKA_BROKER_ID: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    restart: always
    networks:
      - my_network
  
  # postgres:
  #   image: 'postgres:latest'
  #   container_name: consumer-postgres
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=P@ssword_123
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #   restart: always
  #   networks:
  #     - my_network

  # redis:
  #   image: 'redis:latest'
  #   container_name: my-redis
  #   ports:
  #     - "6379:6379"
  #   restart: always
  #   networks:
  #     - my_network

  crypto_producer:
    build:
      dockerfile: Dockerfile
      context: ../../00_CryptoWorkerService
    container_name: crypto_producer_workerservice
    depends_on:
      - kafka-service
    environment:
      - KAFKA_BROKER=kafka-service:9092
    restart: always
    networks:
      - my_network
  
  crypto_consumer:
    build:
      dockerfile: Dockerfile
      context: ../../01_KafkaConsumer
    container_name: crypto_consumer_workerservice
    # depends_on:
    #   - kafka-service
    #   - my-redis
    environment:
      - KAFKA_BROKER=kafka-service:9092
      - REDIS_HOST=my-redis
      - POSTGRES_DB_PORT=5432
      - POSTGRES_DB_HOST=my-postgres
      - POSTGRES_PASSWORD=P@ssword_123
      - POSTGRES_USER=postgres
    links:
      - "kafka-service"
    restart: always
    networks:
      - my_network

volumes:
  pgdata:

networks:
  my_network:
    name: my_infra_network
    external: true